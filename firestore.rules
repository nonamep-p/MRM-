/**
 * @description This ruleset enforces a public read policy for travel packages, hero slides, and site settings,
 * and an admin-only access policy for contact form submissions.
 * @dataStructure
 * - /travelPackages/{travelPackageId}: Publicly readable travel package data.
 * - /contactFormSubmissions/{contactFormSubmissionId}: Contact form submissions, only accessible to authenticated admins.
 * - /siteSettings/main: Publicly readable site-wide settings.
 * - /heroSlides/{heroSlideId}: Publicly readable hero slide data.
 * @keySecurityDecisions
 * - Travel packages and hero slides are publicly readable.
 * - Contact form submissions are only accessible to authenticated admins.
 * - Site settings are publicly readable, but writable only by authenticated admins.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read travel package information, but restricts creation, updates, and deletion to authenticated admins.
     * @path /travelPackages/{travelPackageId}
     * @allow (get, list): if true - Allows any user (authenticated or not) to read travel package information.
     * @allow (create, update, delete): if isSignedIn() - Allows authenticated admins to create, update, and delete travel packages.
     * @deny (create, update, delete): if !isSignedIn() - Denies unauthenticated users from creating, updating, or deleting travel packages.
     * @principle Allows public reads, restricts writes to authenticated admins.
     */
    match /travelPackages/{travelPackageId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Restricts access to contact form submissions to authenticated admins only.
     * @path /contactFormSubmissions/{contactFormSubmissionId}
     * @allow (get, list): if isSignedIn() - Allows authenticated admins to read contact form submissions.
     * @allow create, update, delete: if isSignedIn();
     * @deny (get, list, create, update, delete): if !isSignedIn() - Denies unauthenticated users from accessing contact form submissions.
     * @principle Enforces strict admin-only access for sensitive contact form data.
     */
    match /contactFormSubmissions/{contactFormSubmissionId} {
      allow get, list: if isSignedIn();
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows anyone to read site settings, but restricts creation, updates, and deletion to authenticated admins.
     * @path /siteSettings/main
     * @allow (get): if true - Allows any user (authenticated or not) to read site settings.
     * @allow (create, update, delete): if isSignedIn() - Allows authenticated admins to create, update, and delete site settings.
     * @deny (create, update, delete): if !isSignedIn() - Denies unauthenticated users from creating, updating, or deleting site settings.
     * @principle Allows public reads, restricts writes to authenticated admins.
     */
    match /siteSettings/main {
      allow get: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows anyone to read hero slide information, but restricts creation, updates, and deletion to authenticated admins.
     * @path /heroSlides/{heroSlideId}
     * @allow (get, list): if true - Allows any user (authenticated or not) to read hero slide information.
     * @allow (create, update, delete): if isSignedIn() - Allows authenticated admins to create, update, and delete hero slides.
     * @deny (create, update, delete): if !isSignedIn() - Denies unauthenticated users from creating, updating, or deleting hero slides.
     * @principle Allows public reads, restricts writes to authenticated admins.
     */
    match /heroSlides/{heroSlideId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}